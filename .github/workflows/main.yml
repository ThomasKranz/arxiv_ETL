# This is a basic workflow to help you get started with Actions

name: scrape arxiv

# Controls when the action will run. 
on:
  schedule:
    - cron: '0 12 * * 1-5' # Triggers the workflow daily at 12 UTC
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
    #branches: [ master ]
  #pull_request:
    #branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.0 #install the python needed
      - name: cache pip dependencies  
        uses: actions/cache@v2
        with: 
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('./src/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: import requirements
        run: |
             pip3 install -r ./src/requirements.txt
      - name: execute py script # run the python3 arxiv_db_ai.py to get the latest data
        run: |
             python3 arxiv_db_ai.py
      - run: git config --local user.email "Thomas.Kranzkowski@gmail.com"
      - run: git config --local user.name "Thomas Kranzkowski"
      - run: git add *
      - run: git commit -m "data updated"
      - run: git push
      #- name: export index.... # use crosponding script or actions to help export.
